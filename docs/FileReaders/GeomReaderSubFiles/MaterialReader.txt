These files are split into three main sections:
        1. The header, which is mostly unknown, but does contain counts of further data.
        2. A section of what appears to be sub-components of the material.
        3. A section of completely unknown material data.

The header has the following structure:
    - Four unknown bytes, read as two uint16s and stored in unknown_0x00 and unknown_0x02
    - Sixteen bytes that form the shader filename
    - A count of entries in section 1
    - A count of entries in section 2
    - A number that is either 1, 3, or 5. Each of these numbers seems to correspond to a 
      group of shaders. Changing this number results in no obvious change for the material in-game.
      This is stored in unknown_0x16.

Each type 1 material component comprises 0x18 bytes.
    - The first 16 bytes carry the data.
    - The next byte describes the role of the data.
    - The next byte states how many floats are contained in the data.
    - The next two bytes are always 0x00ff
    - The final four bytes are always padding bytes.

    There are a total of 43 different roles the data can have.
    Each role corresponds to a unique number of floats.
    If the number of floats is 0, the data instead contains(?) 3 uint16s with 10 pad bytes
    separating the first uint16 from the final four bytes.
    Only a few of the roles have currently been determined.

Each type 2 material component also comprises 0x18 bytes:
    - The first 8 bytes carry the data.
    - The next 8 bytes are padding
    - The next byte may describe the role of the data.
    - The next byte is always 100
    - The next two bytes are always 0x00ff
    - The final four bytes are padding bytes.

    The data types of the 8 bytes appears to correspond to the supposed 'role type'.
    The number of these 'role' types may be a continuation of the numbers in the 
    type 1 material components. Most of the data associated with each of these potential
    roles only takes a single value, but some take two.